// THIS FILE IS AUTO GENERATED BY GK-CLI DO NOT EDIT!!
package endpoint

import (
	endpoint "github.com/go-kit/kit/endpoint"
	service "vote_svc/pkg/service"
	"github.com/patrickmn/go-cache"
)

// Endpoints collects all of the endpoints that compose a profile service. It's
// meant to be used as a helper struct, to collect all of the endpoints into a
// single parameter.
type Endpoints struct {
	GetVoteDataEndpoint       endpoint.Endpoint
	GetVoteResultsEndpoint    endpoint.Endpoint
	UpdateVoteResultsEndpoint endpoint.Endpoint
	GetServiceStatusEndpoint  endpoint.Endpoint
}

// New returns a Endpoints struct that wraps the provided service, and wires in all of the
// expected endpoint middlewares
func New(s service.VoteService, c *cache.Cache, mdw map[string][]endpoint.Middleware) Endpoints {
	eps := Endpoints{
		GetServiceStatusEndpoint:  MakeGetServiceStatusEndpoint(s),
		GetVoteDataEndpoint:       MakeGetVoteDataEndpoint(s, c),
		GetVoteResultsEndpoint:    MakeGetVoteResultsEndpoint(s, c),
		UpdateVoteResultsEndpoint: MakeUpdateVoteResultsEndpoint(s),
	}
	for _, m := range mdw["GetVoteData"] {
		eps.GetVoteDataEndpoint = m(eps.GetVoteDataEndpoint)
	}
	for _, m := range mdw["GetVoteResults"] {
		eps.GetVoteResultsEndpoint = m(eps.GetVoteResultsEndpoint)
	}
	for _, m := range mdw["UpdateVoteResults"] {
		eps.UpdateVoteResultsEndpoint = m(eps.UpdateVoteResultsEndpoint)
	}
	for _, m := range mdw["GetServiceStatus"] {
		eps.GetServiceStatusEndpoint = m(eps.GetServiceStatusEndpoint)
	}
	return eps
}
